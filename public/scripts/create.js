(()=>{"use strict";class t{static clamp(t,e=-1/0,s=1/0){return t<e?e:t>s?s:t}}class e{constructor(t,e){this.x=t,this.y=e}add(t){return new e(this.x+t.x,this.y+t.y)}sub(t){return new e(this.x-t.x,this.y-t.y)}mult(t,s=e.VectorMultKind.HADAMARD){switch(s){case e.VectorMultKind.DOT:return this.x*t.x+this.y*t.y;case e.VectorMultKind.HADAMARD:return new e(this.x*t.x,this.y*t.y);default:throw new Error("invalid vector multiplication type: "+s)}}div(t){return new e(this.x/t.x,this.y/t.y)}scale(t){return new e(this.x*t,this.y*t)}magnitude(){return Math.sqrt(this.mult(this,e.VectorMultKind.DOT))}equals(t){return this.x===t.x&&this.y===t.y}copy(){return new e(this.x,this.y)}static fromPoint(t){return new e(t.x,t.y)}}e.ZERO=new e(0,0),function(t){let e;!function(t){t[t.DOT=0]="DOT",t[t.HADAMARD=1]="HADAMARD"}(e=t.VectorMultKind||(t.VectorMultKind={}))}(e||(e={}));const s=e;class i{constructor(t,e){this.width=t,this.height=e}scale(t){return new i(this.width*t,this.height*t)}mult(t){return new i(this.width*t.width,this.height*t.height)}div(t){return new i(this.width/t.width,this.height/t.height)}getCorner(){return new s(this.width,this.height)}equals(t){return this.width===t.width&&this.height===t.height}copy(){return new i(this.width,this.height)}static fromSize(t){return new i(t.width,t.height)}static fromCorner(t){return new i(t.x,t.y)}}class r{constructor(t,e){this.center=t,this.dim=e}get left(){return this.center.x-this.dim.width/2}get right(){return this.center.x+this.dim.width/2}get top(){return this.center.y-this.dim.height/2}get bottom(){return this.center.y+this.dim.height/2}contains(t){return t.x>=this.left&&t.x<=this.right&&t.y>=this.top&&t.y<=this.bottom}clamp(e){return new s(t.clamp(e.x,this.left,this.right),t.clamp(e.y,this.top,this.bottom))}copy(){return new r(this.center.copy(),this.dim.copy())}static fromElement(t){const e=t.getBoundingClientRect();return new r(new s(e.x+e.width/2,e.y+e.height/2),i.fromSize(e))}}class n extends r{constructor(t,e,s){super(t,e),this.rotation=s}copy(){return new n(this.center,this.dim,this.rotation)}}var o;const h=/^[a-z]+(-[a-z]+)*$/;function a(t){if(!h.test(t))throw new SyntaxError(`name "${t}" does not match ${h}`);return`/styles/custom-elements/${t}.css`}var c;!function(t){t[t.PENDING=0]="PENDING",t[t.INITIALIZED=1]="INITIALIZED",t[t.FAILED=2]="FAILED"}(c||(c={}));class l extends HTMLElement{constructor(){super(...arguments),this.initState=c.PENDING,this.initResolvers=new Set,this.initRejectors=new Set}static loadStylesheet(t){return this.loadedTagNames.has(t)?Promise.resolve():new Promise(((e,s)=>{const i=document.createElement("link");i.rel="stylesheet",i.addEventListener("load",(()=>e())),i.addEventListener("error",s),i.href=a(t),window.addEventListener("DOMContentLoaded",(()=>document.head.appendChild(i)))}))}onceInitialized(){const{promise:t,resolve:e,reject:s}=Promise.withResolvers();switch(this.initState){case c.PENDING:this.initResolvers.add(e),this.initRejectors.add(s);break;case c.INITIALIZED:e(this);break;case c.FAILED:s(this.initErr)}return t}connectedCallback(){(this.initElement()??Promise.resolve()).then((()=>{for(const t of this.initResolvers)t(this);this.initState=c.INITIALIZED})).catch((t=>{this.initErr=t;for(const t of this.initRejectors)t(this.initErr);this.initState=c.FAILED})).finally((()=>{this.initResolvers.clear(),this.initRejectors.clear()}))}initElement(){console.warn("initElement method is not overridden for "+this.constructor.name)}on(t,e){return this.addEventListener(t,(t=>e(t,this))),this}once(t){return new Promise((e=>{this.addEventListener(t,(t=>e([t,this])),{once:!0})}))}}o=l,l.loadedTagNames=new Set,(()=>{const t=customElements.define.bind(customElements);customElements.define=(e,s,i)=>{let r=s;for(;r;){if(r===o){o.loadStylesheet(e).then((()=>console.info(`Loaded stylesheet for "${e}"`))).catch((()=>console.warn(`Failed to load stylesheet for "${e}". Make sure to have a CSS stylesheet at ${a(e)}`))).finally((()=>o.loadedTagNames.add(e)));break}r=Object.getPrototypeOf(r)}return t(e,s,i)}})();const d=l;class u extends d{get isControlsVisible(){return this.hasAttribute("controls-visible")}set isControlsVisible(t){this.toggleAttribute("controls-visible",t)}constructor(){super(),this.transform=new n(new s(0,0),new i(30,30),0)}initElement(){this.toggleAttribute("transformable",!0),this.refreshCSSVars();let t=!1,e=s.ZERO;window.addEventListener("mousedown",(s=>{t=!0,e=u.getMouseOffset(s,this).scale(.01).mult(this.transform.dim.getCorner()),this.isControlsVisible=s.target===this})),window.addEventListener("mousemove",(s=>{this.isControlsVisible&&t&&(this.transform.center=u.CANVAS_BOUNDS.clamp(u.getMouseOffset(s,this.parentElement).sub(e)),this.refreshCSSVars())})),window.addEventListener("mouseup",(()=>t=!1))}refreshCSSVars(){this.style.setProperty("--transform-position-x",this.transform.center.x+"%"),this.style.setProperty("--transform-position-y",this.transform.center.y+"%"),this.style.setProperty("--transform-size-width",this.transform.dim.width+"%"),this.style.setProperty("--transform-size-height",this.transform.dim.height+"%"),this.style.setProperty("--transform-rotation",this.transform.rotation+"deg")}static getMouseOffset(t,e){const i=r.fromElement(e);return s.fromPoint(t).sub(i.center).div(i.dim.getCorner()).scale(100)}}u.CANVAS_BOUNDS=new r(new s(0,0),new i(100,100)),d.loadStylesheet("transformable");const m=u;customElements.define("transformable-image",class extends m{})})();